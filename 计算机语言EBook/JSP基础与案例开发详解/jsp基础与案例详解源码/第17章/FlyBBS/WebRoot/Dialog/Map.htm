<HTML>
<HEAD>
<TITLE>图形热点链接</TITLE>
<meta http-equiv="Content-Type" content="text/html; charset=gbk">
<link href="../css/EditorDialog.css" type="text/css" rel="stylesheet">

<script language="JavaScript">
// 取通过URL传过来的参数 (格式如 ?Param1=Value1&Param2=Value2)
var URLParams = new Object() ;
var aParams = document.location.search.substr(1).split('&') ;
for (i=0 ; i < aParams.length ; i++) {
	var aParam = aParams[i].split('=') ;
	URLParams[aParam[0]] = aParam[1] ;
}

// 具有主窗口相同的配置信息
var config;
try{
	config = dialogArguments.config;
}
catch(e){
}


// 去空格，left,right,all可选
function BaseTrim(str){
	  lIdx=0;rIdx=str.length;
	  if (BaseTrim.arguments.length==2)
	    act=BaseTrim.arguments[1].toLowerCase()
	  else
	    act="all"
      for(var i=0;i<str.length;i++){
	  	thelStr=str.substring(lIdx,lIdx+1)
		therStr=str.substring(rIdx,rIdx-1)
        if ((act=="all" || act=="left") && thelStr==" "){
			lIdx++
        }
        if ((act=="all" || act=="right") && therStr==" "){
			rIdx--
        }
      }
	  str=str.slice(lIdx,rIdx)
      return str
}

// 基本信息提示，得到焦点并选定
function BaseAlert(theText,notice){
	alert(notice);
	theText.focus();
	theText.select();
	return false;
}

// 是否有效颜色值
function IsColor(color){
	var temp=color;
	if (temp=="") return true;
	if (temp.length!=7) return false;
	return (temp.search(/\#[a-fA-F0-9]{6}/) != -1);
}

// 只允许输入数字
function IsDigit(){
  return ((event.keyCode >= 48) && (event.keyCode <= 57));
}

// 选颜色
function SelectColor(what){
	var dEL = document.all("d_"+what);
	var sEL = document.all("s_"+what);
	var url = "SelColor.htm?color="+encodeURIComponent(dEL.value);
	var arr = showModalDialog(url,window,"dialogWidth:298px;dialogHeight:265px;help:no;scroll:no;status:no");
	if (arr) {
		dEL.value=arr;
		sEL.style.backgroundColor=arr;
	}
}

// 选背景图
function SelectImage(){
	showModalDialog("BackImage.htm?action=other",window,"dialogWidth:360px;dialogHeight:210px;help:no;scroll:no;status:no");
}

// 搜索下拉框值与指定值匹配，并选择匹配项
function SearchSelectValue(o_Select, s_Value){
	for (var i=0;i<o_Select.length;i++){
		if (o_Select.options[i].value == s_Value){
			o_Select.selectedIndex = i;
			return true;
		}
	}
	return false;
}

// 转为数字型，并无前导0，不能转则返回""
function ToInt(str){
	str=BaseTrim(str);
	if (str!=""){
		var sTemp=parseFloat(str);
		if (isNaN(sTemp)){
			str="";
		}else{
			str=sTemp;
		}
	}
	return str;
}

// 是否有效的链接
function IsURL(url){
	var sTemp;
	var b=true;
	sTemp=url.substring(0,7);
	sTemp=sTemp.toUpperCase();
	if ((sTemp!="HTTP://")||(url.length<10)){
		b=false;
	}
	return b;
}

// 是否有效的扩展名
function IsExt(url, opt){
	var sTemp;
	var b=false;
	var s=opt.toUpperCase().split("|");
	for (var i=0;i<s.length ;i++ ){
		sTemp=url.substr(url.length-s[i].length-1);
		sTemp=sTemp.toUpperCase();
		s[i]="."+s[i];
		if (s[i]==sTemp){
			b=true;
			break;
		}
	}
	return b;
}

// 相对路径转为根形式路径
function relativePath2rootPath(url){
	if (url.substring(0,1)=="/") return url;

	var sWebEditorPath = getWebEditorRootPath();
	while(url.substr(0,3)=="../"){
		url = url.substr(3);
		sWebEditorPath = sWebEditorPath.substring(0,sWebEditorPath.lastIndexOf("/"));
	}
	return sWebEditorPath + "/" + url;
}

// 相对路径按路径模式转为相应的格式
function relativePath2setPath(url){
	switch(config.BaseUrl){
	case "0":
		return baseHref2editorPath(url);
		break;
	case "1":
		return relativePath2rootPath(url);
		break;
	case "2":
		return getSitePath() + relativePath2rootPath(url);
		break;
	}
}

// 显示路径到编辑器路的相对形式
function baseHref2editorPath(url){
	var editorPath = getWebEditorRootPath() + "/";
	var baseHref = config.BaseHref;
	//baseHref = baseHref.substr(0, baseHref.length-1);
	var editorLen = editorPath.length;
	var baseLen = baseHref.length;
	var nMinLen = 0;
	if (editorLen>baseLen){
		nMinLen = baseLen;
	}else{
		nMinLen = editorLen;
	}
	var n = 0;
	for (var i=1; i<=nMinLen; i++){
		n = i;
		if (editorPath.substr(0,i).toLowerCase()!=baseHref.substr(0,i).toLowerCase()){
			break;
		}
	}	
	var str = editorPath.substr(0, n);
	str = str.substring(0,str.lastIndexOf("/")+1);
	n = str.length;
	editorPath = editorPath.substr(n);
	baseHref = baseHref.substr(n);
	var arr = baseHref.split("/");
	var result = "";
	for (var i=1; i<=arr.length-1; i++){
		result += "../";
	}
	result = result + editorPath + url;
	return result;
}

// 取编辑所在跟路径
function getWebEditorRootPath(){
	var url = "/" + document.location.pathname;
	return url.substring(0,url.lastIndexOf("/Dialog/"));
}

// 取站点路径
function getSitePath(){
	var sSitePath = document.location.protocol + "//" + document.location.host;
	if (sSitePath.substr(sSitePath.length-3) == ":80"){
		sSitePath = sSitePath.substring(0,sSitePath.length-3);
	}
	return sSitePath;
}
</script>

<script language="JavaScript">

var oControl;
var oSeletion;
var sRangeType;
var oMap = null;

var sSrc = "";
var sUseMap = "";
var sWidth = "";
var sHeight = "";

var aHref = new Array();
var aTarget = new Array();
var aCoords = new Array();

var aLeft = new Array();
var aTop = new Array();
var aWidth = new Array();
var aHeight = new Array();

var aMapName = new Array();
var sBody = "";

oSelection = opener.HTMLEditor.document.selection.createRange();
oControl = oSelection.item(0);

sSrc = oControl.src;
sUseMap = oControl.useMap;
sWidth = oControl.offsetWidth;
sHeight = oControl.offsetHeight;
if (sUseMap!=""){
	sUseMap = sUseMap.toUpperCase();
	var oAllMap = opener.HTMLEditor.document.body.getElementsByTagName("MAP");
	for (var i=0; i<oAllMap.length; i++){
		aMapName[i] = oAllMap[i].name.toUpperCase();
		if (("#"+aMapName[i])==sUseMap){
			oMap = oAllMap[i];
		}
	}
}


sBody = "<img id='SOURCEIMAGE' border=0 src='"+sSrc+"' width='"+sWidth+"' height='"+sHeight+"'>";
if (oMap){
	for (var i=0; i<oMap.areas.length; i++){
		aHref[i] = oMap.areas(i).href;
		aTarget[i] = oMap.areas(i).target;
		aCoords[i] = oMap.areas(i).coords;
		var a = aCoords[i].split(",");
		aLeft[i] = parseInt(a[0]);
		aTop[i] = parseInt(a[1]);
		aWidth[i] = parseInt(a[2])-aLeft[i];
		aHeight[i] = parseInt(a[3])-aTop[i];
		sBody += "<img id='myIMAGE"+i+"' border=1 src='../sysimage/space.gif' style='position:absolute;left:"+aLeft[i]+"px;top:"+aTop[i]+"px;width:"+aWidth[i]+"px;height:"+aHeight[i]+"px;zIndex:"+(i+1)+"'>";
	}
}


// 初始化
function doInit(){

	mapIframe.document.designMode="On";
	mapIframe.document.open();
	mapIframe.document.write("<head><style>body,a,table,td {font-size:9pt;font-family:'宋体,Verdana,Arial';Color:#000000;}</style></head><body MONOSPACE>");
	mapIframe.document.body.innerHTML = sBody;
	mapIframe.document.body.contentEditable = "true";
	mapIframe.document.ondblclick=new Function("return dblClick(mapIframe.event);");
	
	mapIframe.document.execCommand("2D-Position",true,true);
	//mapIframe.document.execCommand("MultipleSelection", true, true);
	mapIframe.document.execCommand("LiveResize", true, true);
	mapIframe.document.close();

}

// 双击修改链接属性
var objLink = new Object() ;
function dblClick(event){
	var e=event.srcElement;
	if (e){
		if ((e.tagName=="IMG")&&(e.id!="SOURCEIMAGE")){
			var sID = e.id;
			var nID = parseInt(sID.substr(7));
			objLink.Href = aHref[nID];
			objLink.Target = aTarget[nID];
			var arr = showModalDialog("hyperlink.htm?action=other", window, "dialogWidth:350px;dialogHeight:170px;help:no;scroll:no;status:no");
			if (arr){
				aHref[nID] = arr[0];
				aTarget[nID] = arr[1];
			}
		}
	}
	return false;
}

// 新建热点链接
function newMap(){
	var n = aHref.length;
	aHref[n]="";
	aTarget[n]="";
	mapIframe.document.body.innerHTML += "<img id='myIMAGE"+n+"' border=1 src='../sysimage/space.gif' style='position:absolute;zIndex:"+(n+1)+";width:20;height:20;left:0;top:0'>";
	mapIframe.scrollBy(0,0);
	mapIframe.focus();
}

// 取自动递增热点名
function getAutoMapName(){
	var b=true;
	var n=0;
	var s=""
	while (b){
		n++;
		s = "AutoMap" + n;
		if (isValidMapName(s)){
			b=false;
		}
	}
	return s;

}

// 判断是否为不存在的名称
function isValidMapName(str){
	str=str.toUpperCase();
	for (var i=0; i<aMapName.length; i++){
		if (aMapName[i]==str){
			return false;
		}
	}
	return true;
}

</script>

<SCRIPT event=onclick for=Ok language=JavaScript>
	var b=false;
	for (var i=0; i<aHref.length; i++){
		var obj = mapIframe.document.getElementById("myIMAGE"+i);
		if (obj){
			b=true;
		}
	}

	
	if (b){
		var html = "";
		for (var i=0; i<aHref.length; i++){
			var obj = mapIframe.document.getElementById("myIMAGE"+i);
			if (obj){
				var nLeft = parseInt(obj.style.left);
				var nTop = parseInt(obj.style.top);
				var nWidth = parseInt(obj.style.width);
				var nHeight = parseInt(obj.style.height);
				var nRight = nLeft+nWidth;
				var nBottom = nTop+nHeight;
				html += "<area shape='rect' href='"+aHref[i]+"' target='"+aTarget[i]+"' coords='"+nLeft+","+nTop+","+nRight+","+nBottom+"'>";
			}
		}

		if (oMap){
			oMap.innerHTML = html;
		}else{
			sUseMap = getAutoMapName();
			oControl.useMap = "#" + sUseMap;
			opener.appendHTML("<map name='"+sUseMap+"'>"+html+"</map>");
		}
	}else{
		if (oMap){
			oMap.outerHTML = "";
		}
		oControl.useMap = "";
	}
	oControl.width=mapIframe.SOURCEIMAGE.width;
	oControl.height=mapIframe.SOURCEIMAGE.height;

	window.returnValue = null;
	window.close();
</SCRIPT>
</HEAD>

<BODY bgColor=menu topmargin="5" leftmargin="5">
<table border=0 cellpadding=0 cellspacing=3 align=center width="100%" height="100%">
<tr><td colspan=2 height="100%"><iframe ID="mapIframe" MARGINHEIGHT="1" MARGINWIDTH="1" width="100%" scrolling="yes" height="100%"></iframe></td></tr>
<tr><td colspan=2 height=5></td></tr>
<tr><td><input type=button value=' 新 建 ' id=btnNew title="新建热点链接" onclick="newMap()">&nbsp;(双击可编辑链接)</td><td align=right><input type=button value=' 确 定 ' id=Ok>&nbsp;&nbsp;<input type=button value=' 取 消 ' onclick="window.close();"></td></tr>
</table>

<Script Language=JavaScript>
doInit();
</Script>

</body>
</html>
