<HTML>
<HEAD>
<TITLE>书签管理</TITLE>
<meta http-equiv="Content-Type" content="text/html; charset=gbk">
<link href="../css/EditorDialog.css" type="text/css" rel="stylesheet">
<Script Language=JavaScript>
// 取通过URL传过来的参数 (格式如 ?Param1=Value1&Param2=Value2)
var URLParams = new Object() ;
var aParams = document.location.search.substr(1).split('&') ;
for (i=0 ; i < aParams.length ; i++) {
	var aParam = aParams[i].split('=') ;
	URLParams[aParam[0]] = aParam[1] ;
}

// 具有主窗口相同的配置信息
var config;
try{
	config = dialogArguments.config;
}
catch(e){
}


// 去空格，left,right,all可选
function BaseTrim(str){
	  lIdx=0;rIdx=str.length;
	  if (BaseTrim.arguments.length==2)
	    act=BaseTrim.arguments[1].toLowerCase()
	  else
	    act="all"
      for(var i=0;i<str.length;i++){
	  	thelStr=str.substring(lIdx,lIdx+1)
		therStr=str.substring(rIdx,rIdx-1)
        if ((act=="all" || act=="left") && thelStr==" "){
			lIdx++
        }
        if ((act=="all" || act=="right") && therStr==" "){
			rIdx--
        }
      }
	  str=str.slice(lIdx,rIdx)
      return str
}

// 基本信息提示，得到焦点并选定
function BaseAlert(theText,notice){
	alert(notice);
	theText.focus();
	theText.select();
	return false;
}

// 是否有效颜色值
function IsColor(color){
	var temp=color;
	if (temp=="") return true;
	if (temp.length!=7) return false;
	return (temp.search(/\#[a-fA-F0-9]{6}/) != -1);
}

// 只允许输入数字
function IsDigit(){
  return ((event.keyCode >= 48) && (event.keyCode <= 57));
}

// 选颜色
function SelectColor(what){
	var dEL = document.all("d_"+what);
	var sEL = document.all("s_"+what);
	var url = "SelColor.htm?color="+encodeURIComponent(dEL.value);
	var arr = showModalDialog(url,window,"dialogWidth:298px;dialogHeight:265px;help:no;scroll:no;status:no");
	if (arr) {
		dEL.value=arr;
		sEL.style.backgroundColor=arr;
	}
}

// 选背景图
function SelectImage(){
	showModalDialog("BackImage.htm?action=other",window,"dialogWidth:360px;dialogHeight:210px;help:no;scroll:no;status:no");
}

// 搜索下拉框值与指定值匹配，并选择匹配项
function SearchSelectValue(o_Select, s_Value){
	for (var i=0;i<o_Select.length;i++){
		if (o_Select.options[i].value == s_Value){
			o_Select.selectedIndex = i;
			return true;
		}
	}
	return false;
}

// 转为数字型，并无前导0，不能转则返回""
function ToInt(str){
	str=BaseTrim(str);
	if (str!=""){
		var sTemp=parseFloat(str);
		if (isNaN(sTemp)){
			str="";
		}else{
			str=sTemp;
		}
	}
	return str;
}

// 是否有效的链接
function IsURL(url){
	var sTemp;
	var b=true;
	sTemp=url.substring(0,7);
	sTemp=sTemp.toUpperCase();
	if ((sTemp!="HTTP://")||(url.length<10)){
		b=false;
	}
	return b;
}

// 是否有效的扩展名
function IsExt(url, opt){
	var sTemp;
	var b=false;
	var s=opt.toUpperCase().split("|");
	for (var i=0;i<s.length ;i++ ){
		sTemp=url.substr(url.length-s[i].length-1);
		sTemp=sTemp.toUpperCase();
		s[i]="."+s[i];
		if (s[i]==sTemp){
			b=true;
			break;
		}
	}
	return b;
}

// 相对路径转为根形式路径
function relativePath2rootPath(url){
	if (url.substring(0,1)=="/") return url;

	var sWebEditorPath = getWebEditorRootPath();
	while(url.substr(0,3)=="../"){
		url = url.substr(3);
		sWebEditorPath = sWebEditorPath.substring(0,sWebEditorPath.lastIndexOf("/"));
	}
	return sWebEditorPath + "/" + url;
}

// 相对路径按路径模式转为相应的格式
function relativePath2setPath(url){
	switch(config.BaseUrl){
	case "0":
		return baseHref2editorPath(url);
		break;
	case "1":
		return relativePath2rootPath(url);
		break;
	case "2":
		return getSitePath() + relativePath2rootPath(url);
		break;
	}
}

// 显示路径到编辑器路的相对形式
function baseHref2editorPath(url){
	var editorPath = getWebEditorRootPath() + "/";
	var baseHref = config.BaseHref;
	//baseHref = baseHref.substr(0, baseHref.length-1);
	var editorLen = editorPath.length;
	var baseLen = baseHref.length;
	var nMinLen = 0;
	if (editorLen>baseLen){
		nMinLen = baseLen;
	}else{
		nMinLen = editorLen;
	}
	var n = 0;
	for (var i=1; i<=nMinLen; i++){
		n = i;
		if (editorPath.substr(0,i).toLowerCase()!=baseHref.substr(0,i).toLowerCase()){
			break;
		}
	}	
	var str = editorPath.substr(0, n);
	str = str.substring(0,str.lastIndexOf("/")+1);
	n = str.length;
	editorPath = editorPath.substr(n);
	baseHref = baseHref.substr(n);
	var arr = baseHref.split("/");
	var result = "";
	for (var i=1; i<=arr.length-1; i++){
		result += "../";
	}
	result = result + editorPath + url;
	return result;
}

// 取编辑所在跟路径
function getWebEditorRootPath(){
	var url = "/" + document.location.pathname;
	return url.substring(0,url.lastIndexOf("/Dialog/"));
}

// 取站点路径
function getSitePath(){
	var sSitePath = document.location.protocol + "//" + document.location.host;
	if (sSitePath.substr(sSitePath.length-3) == ":80"){
		sSitePath = sSitePath.substring(0,sSitePath.length-3);
	}
	return sSitePath;
}
</script>

<script language="JavaScript">
// 初始选定对象
var oRange;
var sType;
var oSel;

var sName="";

oRange = dialogArguments.HTMLEditor.document.selection.createRange();
sType = dialogArguments.HTMLEditor.document.selection.type;
if (sType == "Control") {
	oSel = oRange(0).parentNode;
}else{
	oSel = oRange.parentElement();
}

if (oSel.tagName.toUpperCase() == "A"){
	if (oSel.href.toUpperCase() == ""){
		sName = oSel.name;
		moveRange(oSel);
	}
}



// 初始值
function InitDocument(){
	d_anchor.value = sName;
	getAnchors();
}

// 取所有的锚
function getAnchors() {
	d_allanchor.options.length = 0;
	var allLinks = dialogArguments.HTMLEditor.document.body.getElementsByTagName("A");
	for (i=0; i < allLinks.length; i++) {
		if (allLinks[i].href.toUpperCase() == "") {
			d_allanchor.options[d_allanchor.options.length] = new Option(allLinks[i].name, allLinks[i].name);
		}
	}
}

// 取指定名称的锚对象
function getAnchorObj(str) {
	var allLinks = dialogArguments.HTMLEditor.document.body.getElementsByTagName("A");
	for (i=0; i < allLinks.length; i++) {
		if (allLinks[i].href.toUpperCase() == "") {
			if (allLinks[i].name==str){
				return allLinks[i];
			}
		}
	}
	return null;
}

// 确定
function OK(){
	var sName = BaseTrim(d_anchor.value);
	if (sName == ""){
		BaseAlert(d_anchor, "没有输入书签名称...");
		return;
	}

	oRange = dialogArguments.HTMLEditor.document.selection.createRange();
	sType = dialogArguments.HTMLEditor.document.selection.type;
	if (sType == "Control") {
		oSel = oRange(0).parentNode;
	}else{
		oSel = oRange.parentElement();
	}

	var bModify = false;
	if (oSel.tagName.toUpperCase() == "A"){
		if (oSel.href.toUpperCase() == ""){
			oSel.name = sName;
			bModify = true;
		}
	}
	if (!bModify){
		var html="";
		if (sType == "Control") {
			oRange(0).outerHTML = "<a id=HTMLEditor_TempElement_Anchor name=" + sName + ">" + oRange(0).outerHTML + "</a>";
		}else{
			oRange.pasteHTML("<a id=HTMLEditor_TempElement_Anchor name=" + sName + ">" + oRange.htmlText + "</a>");
		}

		var oTempElement = dialogArguments.HTMLEditor.document.getElementById("HTMLEditor_TempElement_Anchor");

		if (dialogArguments.borderShown != "0") {
			oTempElement.runtimeStyle.borderBottom = "1px dashed #000000";
		}

		oTempElement.removeAttribute("id");
	}
	
	window.returnValue = null;
	window.close();
}

// 转到
function doMove(){
	var nIndex = d_allanchor.selectedIndex;
	if (nIndex<0) {
		alert("必须选择一个书签...");
		return;
	}
	var sel = getAnchorObj(d_allanchor.options[nIndex].value);
	if (sel){
		moveRange(sel);
	}
}

// 清除
function doDel(){
	var nIndex = d_allanchor.selectedIndex;
	if (nIndex<0) {
		alert("必须选择一个书签...");
		return;
	}
	var sel = getAnchorObj(d_allanchor.options[nIndex].value);
	if (sel){
		sel.outerHTML = sel.innerHTML;
		d_allanchor.options[nIndex] = null;
	}
}

// 选定指定元素的选区
function moveRange(sel){
	var rng = dialogArguments.HTMLEditor.document.body.createTextRange();
	rng.moveToElementText(sel);
	rng.select();
}
</script>

</HEAD>
<BODY bgcolor="#FFFFFF" onload="InitDocument()" topmargin="5" leftmargin="5">

<TABLE CELLSPACING="0" cellpadding="5" border="0" align=center>
<TR valign="top">
	<TD align="left" nowrap>
		书签名称:<br>
		<INPUT TYPE=TEXT SIZE=20 id="d_anchor" style="width:150px;"><br>
		本页其它书签:<br>
		<select id="d_allanchor" size=8 style="width:150px;" onchange="d_anchor.value=this.options[this.selectedIndex].value;"></select>
	</td>
	<td>
		<input type=button style="width:80px;margin-top:15px" name="btnOK" onClick="OK()" value=" 确 定 "><br>
		<input type=button style="width:80px;margin-top:5px" name="btnCancel" onClick="window.close()" value=" 取 消 "><br>
		<input type=button style="width:80px;margin-top:60px" name="btnMove" onClick="doMove()" value=" 转 到 "><br>
		<input type=button style="width:80px;margin-top:5px" name="btnDel" onClick="doDel()" value=" 清 除 "><br>
	</td>
</tr>
</table>
</BODY>
</HTML>
